<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd  
    http://www.springframework.org/schema/mvc  
	http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context-4.1.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

	<!-- 自动扫描bean，把作了注解的类转换为bean -->
	<context:component-scan base-package ="com.bw30.zsch.tribe.touch.*">
		<context:exclude-filter type ="annotation" expression= "org.springframework.stereotype.Controller" />
	</context:component-scan >

	<!-- 异常统一处理 -->
	<bean id="globalExceptionHandler" class="com.bw30.zsch.tribe.touch.system.exception.GlobalExceptionHandler"></bean>

	<!-- 应用自身配置，代码使用 -->
	<util:properties id="applicationConfig" location="classpath:/application.properties"
		local-override="true" />

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<!-- 读取配置文件 -->
		<property name="locations">
			<list>
				<value>classpath:/application.properties</value>
			</list>
		</property>
		<property name="fileEncoding" value="utf-8" />
	</bean>
	
	<bean id="tribePropertiesConfig" class="com.bw30.zsch.tribe.touch.config.bean.TribePropertiesConfig">
		<property name="appPath" value="${tribe_touch_app_path}"></property>
	</bean>

	<!-- 指定自己定义的validator -->  
	<mvc:annotation-driven validator="validator"/>  
	  
	<!-- 以下 validator  ConversionService 在使用 mvc:annotation-driven 会 自动注册-->  
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">  
	    <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>  
	    <!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->  
	    <!-- <property name="validationMessageSource" ref="messageSource"/>  -->  
	</bean> 
	
	<!-- Freemarker配置 -->
	<!-- <bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/cashier/" />
		<property name="freemarkerSettings">
			<props>
				刷新模板的周期，单位为秒
				<prop key="template_update_delay">0</prop>
				模板的编码格式
				<prop key="default_encoding">UTF-8</prop>
				freemarker 数字格式化
				<prop key="number_format">0.##########</prop>
				指定的格式把日期转换成字符串
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				兼容传统模式
				<prop key="classic_compatible">true</prop>
				<prop key="template_exception_handler">ignore</prop>
			</props>
		</property>
	</bean> -->

	<!-- 配置视图解析器 如何把handler 方法返回值解析为实际的物理视图 -->
	<!-- <bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
		<property name="contentType" value="text/html; charset=utf-8" />
		<property name="suffix" value=".ftl" />
		<property name="order" value="1" />
		<property name="exposeRequestAttributes" value="true" />
        <property name="exposeSessionAttributes" value="true" />
        <property name="exposeSpringMacroHelpers" value="true" />
	</bean> -->


		<import resource="classpath:/spring-dubbo-consumer.xml"/>
		<import resource="classpath:/applicationContext-view.xml"/>
		<!-- <import resource="classpath:/spring-redis.xml"/> -->
		<!-- 如果touch添加数据库，则需要同步修改application.properties中的数据库连接配置 -->
		<!-- <import resource="classpath:/spring-dao.xml"/> -->
		<!-- <import resource="classpath:/spring-memcached.xml"/> -->
	
</beans>
